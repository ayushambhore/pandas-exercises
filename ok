from reportlab.pdfgen import canvas
from reportlab.lib.units import mm
from PyPDF2 import PdfReader, PdfWriter

class PDFCreator:
    def __init__(self):
        self.page_width = 437 * mm
        self.page_height = 330 * mm
        self.blank_pdf_path = "blank.pdf"
        self.final_pdf_path = "output.pdf"

    def create_blank_pdf(self, filename, num_pages):
        c = canvas.Canvas(filename, pagesize=(self.page_width, self.page_height))
        for _ in range(num_pages):
            c.showPage()
        c.save()
        print(f"Blank PDF with {num_pages} pages created: {filename}")

    def text2pdf(self, txt_filepath):
        try:
            # Create blank 4-page PDF first
            self.create_blank_pdf(self.blank_pdf_path, num_pages=4)

            # Now open the blank PDF
            reader = PdfReader(self.blank_pdf_path)
            writer = PdfWriter()

            # Create a canvas to draw text on each page
            packet_path = "temp_text_pages.pdf"
            c = canvas.Canvas(packet_path, pagesize=(self.page_width, self.page_height))

            # Read text file
            with open(txt_filepath, 'r', encoding='utf-8') as txt_file:
                text_content = txt_file.read()

            textobject = c.beginText()
            textobject.setTextOrigin(10, self.page_height - 30)  # Start near the top
            textobject.setFont("Helvetica", 12)

            lines_per_page = 50  # adjust according to your font size and page size
            line_count = 0

            for line in text_content.splitlines():
                if line_count >= lines_per_page:
                    c.drawText(textobject)
                    c.showPage()
                    textobject = c.beginText()
                    textobject.setTextOrigin(10, self.page_height - 30)
                    textobject.setFont("Helvetica", 12)
                    line_count = 0

                textobject.textLine(line)
                line_count += 1

            # Draw the remaining text
            c.drawText(textobject)
            c.save()

            # Now read the text-containing PDF
            text_reader = PdfReader(packet_path)

            # Merge text pages onto blank pages
            for blank_page, text_page in zip(reader.pages, text_reader.pages):
                blank_page.merge_page(text_page)
                writer.add_page(blank_page)

            # Save final output
            with open(self.final_pdf_path, "wb") as f_out:
                writer.write(f_out)

            print("Successfully converted text to PDF!")

        except Exception as e:
            print(f"Error: {e}")

if __name__ == "__main__":
    pdf_creator = PDFCreator()
    txt_filepath = "/home/aayush.ambhore@gripunedomain.com/Desktop/Files/Tasks/Appendix.txt"
    pdf_creator.text2pdf(txt_filepath)
