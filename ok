from reportlab.pdfgen import canvas
from reportlab.lib.units import mm
from pypdf import PdfReader, PdfWriter

class PDFCreator:
    def __init__(self):
        self.page_width = 437 * mm
        self.page_height = 330 * mm
        self.blank_pdf_path = "blank.pdf"
        self.text_pdf_path = "text.pdf"
        self.final_pdf_path = "output.pdf"

    def create_blank_pdf(self, filename, num_pages):
        """Create a blank PDF with given number of pages."""
        c = canvas.Canvas(filename, pagesize=(self.page_width, self.page_height))
        for _ in range(num_pages):
            c.showPage()
        c.save()
        print(f"Blank PDF with {num_pages} pages created: {filename}")

    def create_text_pdf(self, txt_filepath, packet_path):
        """Create a PDF that contains the text from the file."""
        c = canvas.Canvas(packet_path, pagesize=(self.page_width, self.page_height))

        with open(txt_filepath, 'r', encoding='utf-8') as txt_file:
            text_content = txt_file.readlines()

        textobject = c.beginText()
        textobject.setTextOrigin(40, self.page_height - 50)  # Start top with some margin
        textobject.setFont("Helvetica", 12)

        line_spacing = 20  # spacing between lines
        lines_per_page = int((self.page_height - 100) / line_spacing)  # auto calculate
        line_count = 0

        for line in text_content:
            line = line.strip()
            if not line:
                continue

            if line_count >= lines_per_page:
                c.drawText(textobject)
                c.showPage()
                textobject = c.beginText()
                textobject.setTextOrigin(40, self.page_height - 50)
                textobject.setFont("Helvetica", 12)
                line_count = 0

            textobject.textLine(line)
            line_count += 1

        c.drawText(textobject)
        c.save()
        print(f"Text PDF created: {packet_path}")

    def merge_pdfs(self):
        """Merge the blank pages and text pages."""
        blank_reader = PdfReader(self.blank_pdf_path)
        text_reader = PdfReader(self.text_pdf_path)
        writer = PdfWriter()

        for blank_page, text_page in zip(blank_reader.pages, text_reader.pages):
            blank_page.merge_page(text_page)  # merge text onto blank page
            writer.add_page(blank_page)

        with open(self.final_pdf_path, "wb") as f_out:
            writer.write(f_out)
        print(f"Final PDF saved: {self.final_pdf_path}")

    def text2pdf(self, txt_filepath):
        """Full pipeline: create blank, text, merge into final PDF."""
        self.create_blank_pdf(self.blank_pdf_path, num_pages=4)
        self.create_text_pdf(txt_filepath, self.text_pdf_path)
        self.merge_pdfs()
        print("Successfully converted text into PDF with pypdf!")

if __name__ == "__main__":
    pdf_creator = PDFCreator()
    txt_filepath = "/home/aayush.ambhore@gripunedomain.com/Desktop/Files/Tasks/Appendix.txt"
    pdf_creator.text2pdf(txt_filepath)
